/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4/userguide/java_library_plugin.html
 */
import org.apache.tools.ant.filters.*

buildscript {
    ext {
        antVersion = '1.9.14'
        javassistVersion = '3.24.1-GA'
        mavenVersion = '3.2.5'
        checkstyleVersion = '6.1.1'
    }
}
description = 'Tattletale - a software quality tool'

subprojects {
    repositories {
        // Use jcenter for resolving your dependencies.
        // You can declare any Maven/Ivy/file repository here.
        jcenter()
    }
    version = '1.2.0'
    plugins.apply('java')
    plugins.apply('maven')
    plugins.apply('checkstyle')
    tasks.withType(Jar) {
        archiveName "tattletale-${project.name}.jar"
        manifest {
            attributes('Manifest-Version':  '1.0',
                    'Implementation-Title': 'JBoss Tattletale Tools',
                    'Implementation-Vendor': 'Red Hat Middleware LLC',
                    'Implementation-Vendor-Id': 'org.jboss',
                    'Implementation-Version': '1.2.0')
        }
    }
    task generatePom {
        doLast {
            pom {
                project {
                    groupId 'org.jboss.tattletale'
                    artifactId "tattletale-${project.name}"
                    version version
                }
            }.writeTo("$buildDir/resources/main/META-INF/maven/org.jboss.tattletale/tattletale-${project.name}/pom.xml")
            file("$buildDir/resources/main/META-INF/maven/org.jboss.tattletale/tattletale-${project.name}/pom.properties").text = """version=${project.version}
groupId=org.jboss.tattletale
artifactId=tattletale-${project.name}
"""
        }
    }
    compileJava.dependsOn generatePom
    tasks.withType(Copy) {
        filter ReplaceTokens, tokens: [
                "VERSION": project.version,
                "VERSION.TATTLETALE": project.version
        ]
    }
    /*
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
     */
}
